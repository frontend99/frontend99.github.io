{"version":3,"sources":["logo.svg","Components/Menu/Menu.js","Pages/HomePage/HomePage.js","Components/ProductList/ProductList.js","Components/ProductItem/ProductItem.js","Constants/Config.js","Utils/apiCaller.js","Actions/index.js","Constants/ActionTypes.js","Pages/ProductListPage/ProductListPage.js","Pages/ProductActionPage/ProductActionPage.js","routes.js","App.js","serviceWorker.js","Reducers/products.js","Reducers/ItemEditing.js","Reducers/index.js","index.js"],"names":["module","exports","menus","name","to","exact","MenuLink","label","activeOnlyWhenExact","path","children","active","match","className","Menu","showMenus","result","length","map","menu","index","key","src","logo","alt","this","Component","HomePage","Products","scope","props","ProductItem","onDelete","id","confirm","product","statusName","status","price","onClick","API_URL","callApi","endpoint","method","body","axios","url","Config","data","catch","err","console","log","actFetchProducts","products","type","actDeleteProduct","actAddProduct","actGetProduct","actUpdateProduct","ProductListPage","onDeleteProduct","fetchAllProducts","showProducts","connect","state","dispatch","then","res","actDeleteProductRequest","ProductActionPage","onChange","e","target","value","checked","setState","onSave","preventDefault","txtName","txtPrice","chkbStatus","history","onUpdateProduct","onAddProduct","goBack","params","onEditProduct","nextProps","itemEditing","onSubmit","actAddProductRequest","actGetProductRequest","actUpdateProductRequest","routes","main","location","App","showContentMenus","route","component","Boolean","window","hostname","initialState","findIndex","forEach","action","splice","push","appReducers","combineReducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4543f12a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport logo from './../../logo.svg';\r\nimport './Menu.css';\r\n\r\nconst menus = [\r\n    {\r\n        name: 'Trang Chủ',\r\n        to: '/',\r\n        exact: true\r\n    },\r\n    {\r\n        name : 'Quản Lý Sản Phẩm',\r\n        to : '/products',\r\n        exact : false\r\n    }\r\n]\r\n\r\nconst MenuLink = ({ label, to, activeOnlyWhenExact }) => {\r\n    return (\r\n        <Route path={to} exact={activeOnlyWhenExact} children={({ match }) => {\r\n            var active = match ? 'active' : '';\r\n            return (\r\n                <li className={`${active}`}>\r\n                    <Link to={to}  className=\"nav-link text-white\">\r\n                        {label}\r\n                    </Link>\r\n                </li>\r\n            )\r\n        }} />\r\n    )\r\n}\r\n\r\nclass Menu extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-default nav-nav\">\r\n                <ul className=\"nav navbar-nav nav-ul\">\r\n                    <Link to=\"/\" className=\"navbar-brand img-logo\"><img src={logo} className=\"App-logo navbar-brand\" alt=\"logo\" /></Link>\r\n                    {this.showMenus(menus)}\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n\r\n    showMenus = (menus) => {\r\n        var result = null;\r\n        if (menus.length > 0) {\r\n            result = menus.map((menu, index) => {\r\n                return (\r\n                    <MenuLink\r\n                        key={index}\r\n                        label={menu.name}\r\n                        to={menu.to}\r\n                        activeOnlyWhenExact={menu.exact}\r\n                    />\r\n                )\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport logo from './../../logo.svg';\r\nimport './HomePage.css';\r\nclass HomePage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <h1 className=\"h1-home\">React App - Quản Lý Sản Phẩm Đơn Giản</h1>\r\n                <div className=\"info-home\">\r\n                <p className=\"h5-home\">Nguyễn Hồng Đức <br/> CNTT2 - K58 </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React, { Component } from 'react';\r\nimport './ProductList.css';\r\n\r\nclass Products extends Component {\r\n    render() {\r\n        return (\r\n                <div className=\"card mt-3\">\r\n                    <div className=\"card-header css-card-header\">Danh sách sản phẩm</div>\r\n                    <div className=\"card-body\">\r\n                        <table className=\"table table-bordered\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">STT</th>\r\n                                <th scope=\"col\">Mã SP</th>\r\n                                <th scope=\"col\">Tên</th>\r\n                                <th scope=\"col\">Giá (VND) </th>\r\n                                <th scope=\"col\">Trạng thái</th>\r\n                                <th scope=\"col\">Thao tác</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.props.children}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Products;","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport './ProductItem.css';\r\n\r\nclass ProductItem extends Component {\r\n  onDelete = (id) => {\r\n    if(confirm('Bạn có muốn xóa không ?')){ //eslint-disable-line\r\n      this.props.onDelete(id);\r\n    }\r\n    \r\n  }\r\n  \r\n  render() {\r\n    var {product, index} = this.props;\r\n    var statusName = product.status ? 'Còn Hàng' : 'Hết Hàng';\r\n    return (\r\n        <tr>\r\n          <th scope=\"row\">{index + 1}</th>\r\n          <td>{product.id}</td>\r\n          <td>{product.name}</td>\r\n          <td>{product.price}</td>\r\n          <td>\r\n            {statusName}\r\n          </td>\r\n          <td className=\"text-center\">\r\n            <Link to={`/products/${product.id}/edit`} className=\"btn btn-primary mr-1\">\r\n              <i className=\"far fa-edit mr-2\"></i>Sửa\r\n            </Link>\r\n            <button className=\"btn btn-danger ml-1 css-btnDelete\" onClick={() => this.onDelete(product.id)}>\r\n              <i className=\"far fa-trash-alt mr-2\"></i>Xóa\r\n            </button>\r\n          </td>\r\n        </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductItem;\r\n","export const API_URL = 'http://5e19a2bdcc623b001467893a.mockapi.io/api';","import axios from 'axios';\r\nimport * as Config from '../Constants/Config';\r\n\r\nexport default function callApi(endpoint,method = 'GET',body){\r\n    return axios({\r\n        method: method,\r\n        url: `${Config.API_URL}/${endpoint}`,\r\n        data: body\r\n    }).catch(err => {\r\n        console.log(err);\r\n    })\r\n}","import * as Types from '../Constants/ActionTypes';\r\nimport callApi from '../Utils/apiCaller';\r\n\r\n// gọi API lấy dữ liệu về và lưu vào store\r\nexport const actFetchProductsRequest = () => {\r\n    return (dispatch) => {\r\n        return callApi('products','GET',null).then(res => {\r\n            dispatch(actFetchProducts(res.data));\r\n        });\r\n    }\r\n}\r\n\r\nexport const actFetchProducts = (products) => {\r\n    return{\r\n        type: Types.FETCH_PRODUCTS,\r\n        products\r\n    }\r\n}\r\n\r\nexport const actDeleteProductRequest = (id) => {\r\n    return (dispatch) => {\r\n        return callApi(`products/${id}`,'DELETE',null).then(res => {\r\n            dispatch(actDeleteProduct(id));\r\n        })\r\n    }\r\n}\r\n\r\nexport const actDeleteProduct = (id) => {\r\n    return{\r\n        type: Types.DELETE_PRODUCT,\r\n        id\r\n    }\r\n}\r\n\r\nexport const actAddProductRequest = (product) => {\r\n    return dispatch => {\r\n        return callApi('products','POST',product).then(res => {\r\n            dispatch(actAddProduct(res.data));\r\n        });\r\n    }\r\n}\r\n\r\nexport const actAddProduct = (product) => {\r\n    return{\r\n        type: Types.ADD_PRODUCT,\r\n        product\r\n    }\r\n}\r\n\r\nexport const actGetProductRequest = (id) => {\r\n    return (dispatch) => {\r\n        return callApi(`products/${id}`,'GET',null).then(res => {\r\n            dispatch(actGetProduct(res.data));\r\n        });\r\n    }\r\n}\r\n\r\nexport const actGetProduct = (product) => {\r\n    return {\r\n        type: Types.EDIT_PRODUCT,\r\n        product\r\n    }\r\n}\r\n\r\nexport const actUpdateProductRequest = (product) => {\r\n    return (dispatch) => {\r\n        return callApi(`products/${product.id}`,'PUT',product).then(res => {\r\n            dispatch(actUpdateProduct(res.data));\r\n        });\r\n    }\r\n}\r\n\r\nexport const actUpdateProduct = (product) => {\r\n    return{\r\n        type: Types.UPDATE_PRODUCT,\r\n        product\r\n    }\r\n}","export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\r\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\r\nexport const UPDATE_PRODUCT = 'UPDATE_PRODUCT';\r\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\r\nexport const EDIT_PRODUCT = 'EDIT_PRODUCT';","import React, { Component } from 'react';\r\nimport ProductList from './../../Components/ProductList/ProductList';\r\nimport ProductItem from './../../Components/ProductItem/ProductItem';\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\nimport {actFetchProductsRequest, actDeleteProductRequest} from '../../Actions/index';\r\n\r\nclass ProductListPage extends Component {\r\n\r\n    componentDidMount(){\r\n        // gọi sau khi component render lần đầu tiên\r\n        this.props.fetchAllProducts();\r\n    }\r\n    \r\n    onDelete = (id) => {\r\n        this.props.onDeleteProduct(id);\r\n    }\r\n\r\n    render() {\r\n        var {products} = this.props;\r\n        return (\r\n            <div className=\"container text-left mt-5\">\r\n                <Link to=\"/products/add\" className=\"btn btn-success\"><i className=\"fas fa-plus-circle mr-2\"></i>Thêm mới sản phẩm</Link>\r\n                <ProductList>\r\n                    {this.showProducts(products)}\r\n                </ProductList>\r\n            </div>\r\n        );\r\n    }\r\n    showProducts(products){\r\n        var result = null;\r\n        if (products.length > 0) {\r\n            result = products.map((product,index) => {\r\n                return(\r\n                    <ProductItem\r\n                    key={index}\r\n                    product={product}\r\n                    index={index}\r\n                    onDelete = {this.onDelete} />\r\n                );\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    // lấy tất cả products từ store\r\n    return{\r\n        products : state.products\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    // lưu lên store\r\n    return{\r\n        fetchAllProducts: () => {\r\n            dispatch(actFetchProductsRequest());\r\n        },\r\n        onDeleteProduct: (id) => {\r\n            dispatch(actDeleteProductRequest(id));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductListPage);","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {actAddProductRequest, actGetProductRequest, actUpdateProductRequest} from '../../Actions/index';\r\nimport {connect} from 'react-redux';\r\nimport './ProductActionPage.css';\r\n\r\nclass ProductActionPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            txtName: '',\r\n            txtPrice: '',\r\n            chkbStatus: false\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        var { match } = this.props;\r\n        if (match) { // update\r\n            var id = match.params.id;\r\n            this.props.onEditProduct(id);\r\n        } // else => add\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps && nextProps.itemEditing){\r\n            var {itemEditing} = nextProps;\r\n            this.setState({\r\n                id: itemEditing.id,\r\n                txtName: itemEditing.name,\r\n                txtPrice: itemEditing.price,\r\n                chkbStatus: itemEditing.status\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        var target = e.target;\r\n        var name = target.name;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    onSave = (e) => {\r\n        e.preventDefault();\r\n        var {id, txtName,txtPrice,chkbStatus} = this.state;\r\n        var {history} = this.props;\r\n        var product = {\r\n            id: id,\r\n            name: txtName,\r\n            price: txtPrice,\r\n            status: chkbStatus\r\n        }\r\n        if(id) { // update\r\n            this.props.onUpdateProduct(product);\r\n        }\r\n        else{ // add\r\n            this.props.onAddProduct(product);\r\n        }\r\n        history.goBack();\r\n    }\r\n\r\n    render() {\r\n        var { txtName, txtPrice, chkbStatus } = this.state;\r\n        return (\r\n            <div className=\"container text-left mt-5 css-container\">\r\n                <form onSubmit={this.onSave}>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"css-label\" >Tên sản phẩm</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"txtName\" value={txtName} onChange={this.onChange}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"css-label\">Giá sản phẩm</label>\r\n                        <input type=\"number\" className=\"form-control\" name=\"txtPrice\" value={txtPrice} onChange={this.onChange}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"css-label\">Tình trạng</label>\r\n                    </div>\r\n                    <div className=\"form-check ml-4 mb-4\">\r\n                        <input type=\"checkbox\" className=\"form-check-input\" name=\"chkbStatus\" value={chkbStatus} onChange={this.onChange}\r\n                        checked={chkbStatus}/><span className=\"ml-3 mb-3\">Còn hàng</span>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary css-btnSave\">Lưu sản phẩm</button>\r\n                    <Link to=\"/products\" className=\"btn btn-danger text-white ml-3\"> Xem danh sách\r\n                    </Link>\r\n                </form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        itemEditing: state.itemEditing\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return{\r\n        onAddProduct: (product) => {\r\n            dispatch(actAddProductRequest(product));\r\n        },\r\n        onEditProduct: (id) => {\r\n            dispatch(actGetProductRequest(id));\r\n        },\r\n        onUpdateProduct: (product) => {\r\n            dispatch(actUpdateProductRequest(product));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductActionPage);","import React from 'react';\r\nimport HomePage from './Pages/HomePage/HomePage';\r\nimport ProductListPage from './Pages/ProductListPage/ProductListPage';\r\nimport ProductActionPage from './Pages/ProductActionPage/ProductActionPage';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        main: () => <HomePage />\r\n    },\r\n    {\r\n        path: '/products',\r\n        exact: true,\r\n        main: () => <ProductListPage />\r\n    },\r\n    {\r\n        path: '/products/add',\r\n        exact: true,\r\n        main: ({ location, history }) => <ProductActionPage location={location} history={history} />\r\n    },\r\n    {\r\n        path: '/products/:id/edit',\r\n        exact: true,\r\n        main: ({ match, history }) => <ProductActionPage match={match} history={history} />\r\n    }\r\n];\r\n\r\nexport default routes;","import React, { Component } from 'react';\nimport './App.css';\nimport Menu from './Components/Menu/Menu';\nimport {BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport routes from './routes';\n\n\nclass App extends Component {\n  render() {\n      return (\n          <Router>\n              <div className=\"App css-bg\">\n                  <Menu />\n                  {this.showContentMenus(routes)}\n              </div>\n          </Router>\n      );\n  }\n\n  showContentMenus = (routes) => {\n      var result = null;\n      if (routes.length > 0) {\n          result = routes.map((route, index) => {\n              return (\n                  <Route\n                      key={index}\n                      path={route.path}\n                      exact={route.exact}\n                      component={route.main}\n                  />\n              );\n          });\n      }\n      return <Switch>{result}</Switch>;\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as Types from '../Constants/ActionTypes';\r\n\r\nvar initialState = [];\r\n\r\nvar findIndex = (products, id) => {\r\n    var result = -1;\r\n    products.forEach((product, index) => {\r\n        if(product.id === id)\r\n            result = index;\r\n    });\r\n    return result;\r\n}\r\n\r\nconst products = (state = initialState, action) => {\r\n    var index = -1;\r\n    var {product,id} = action;\r\n    switch(action.type){\r\n        case Types.FETCH_PRODUCTS:\r\n            state = action.products;\r\n            return [...state];\r\n        case Types.DELETE_PRODUCT:\r\n            index = findIndex(state, id);\r\n            state.splice(index,1);\r\n            return [...state];\r\n        case Types.ADD_PRODUCT:\r\n            state.push(action.product);\r\n            return [...state];\r\n        case Types.UPDATE_PRODUCT:\r\n            index = findIndex(state, product.id);\r\n            state[index] = product;\r\n            return [...state];\r\n        default: return [...state];\r\n    }\r\n};\r\n\r\nexport default products;","import * as Types from '../Constants/ActionTypes';\r\n\r\nvar initialState = {};\r\n\r\nconst itemEditing = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case Types.EDIT_PRODUCT:\r\n            return action.product\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default itemEditing;","import {combineReducers} from 'redux';\r\nimport products from './products';\r\nimport itemEditing from './ItemEditing';\r\n\r\nconst appReducers = combineReducers({\r\n    products,\r\n    itemEditing\r\n});\r\n\r\nexport default appReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, compose, applyMiddleware} from 'redux';\nimport appReducers from './Reducers/index';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\n\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    appReducers,\n    composeEnhancer(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\nexport default store;\nserviceWorker.unregister();\n"],"sourceRoot":""}